
# determining client scaling with nginx
events {
    worker_connections 1020;
    }


http {
    log_format upstreamlog '$server_name to: $upstream_addr {$request} '
    'upstream_response_time $upstream_response_time'
    ' request_time $request_time';

    upstream identity-proxy {
        ip_hash;
        server 127.0.0.1:8080;
        keepalive 64;
    }

    upstream tomtomload {
        ip_hash;
        server 127.0.0.1:5000;
        keepalive 64;
    }

    server {
        listen 80;
        listen 443 ssl;
        server_name identity-proxy;

        ssl_certificate /etc/nginx/certs/TOMTOMLOAD.crt;
        ssl_certificate_key /etc/nginx/certs/TOMTOMLOAD_key.pem;
        access_log /var/log/nginx/nginx-access.log upstreamlog;

        location / {
            proxy_pass    http://identity-proxy;
            proxy_set_header            Host $host;
            proxy_set_header            X-Real-IP $remote_addr;
            proxy_http_version          1.1;

            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header            X-Forwarded-Proto http;
            proxy_redirect              http:// $scheme://;

        }
    }

    server {
        listen 80;
        listen 443 ssl;
        server_name tomtomloadapp;

        ssl_certificate /etc/nginx/certs/TOMTOMLOAD.crt;
        ssl_certificate_key /etc/nginx/certs/TOMTOMLOAD_key.pem;
        access_log /var/log/nginx/nginx-access.log upstreamlog;

        location / {
            proxy_pass    http://tomtomload;
            proxy_set_header            Host $host;
            proxy_set_header            X-Real-IP $remote_addr;
            proxy_http_version          1.1;

            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header            X-Forwarded-Proto http;
            proxy_redirect              http:// $scheme://;
        }
    }

    # redirect http to https here
    server {
        listen                          80;
        listen                          [::]:80;
        return                          301 https://127.0.0.1:5000/;
    }
}
